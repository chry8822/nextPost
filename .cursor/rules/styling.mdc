---
globs: *.tsx,*.ts,*.css
description: Comprehensive styling standards for Tailwind CSS 4, design system, and visual consistency
---

# DevSpace Styling & Design System Standards

## üé® DESIGN SYSTEM FOUNDATION (IMMUTABLE PRINCIPLES)

### Color Palette (NEVER DEVIATE)

```css
/* Primary Colors - Slate-based Design Tokens */
--slate-50: #f8fafc; /* Background subtle */
--slate-100: #f1f5f9; /* Hover states, disabled */
--slate-200: #e2e8f0; /* Borders, dividers */
--slate-300: #cbd5e1; /* Input borders */
--slate-400: #94a3b8; /* Placeholder text */
--slate-500: #64748b; /* Secondary text */
--slate-600: #475569; /* Primary text muted */
--slate-700: #334155; /* Headings */
--slate-800: #1e293b; /* Primary text */
--slate-900: #0f172a; /* High contrast text */
--slate-950: #020617; /* Maximum contrast */

/* Semantic Colors */
--blue-600: #2563eb; /* Primary brand */
--red-500: #ef4444; /* Destructive actions */
--green-500: #22c55e; /* Success states */
--yellow-500: #eab308; /* Warning states */
```

### Typography System (STRICT HIERARCHY)

```typescript
// Font Stack (NEVER CHANGE)
const fontFamily = {
  sans: ['Inter', 'system-ui', 'sans-serif'], // Primary font
  mono: ['Fira Code', 'Consolas', 'monospace'], // Code font
};

// Type Scale (MANDATORY USAGE)
const typeScale = {
  'text-xs': '12px', // Captions, labels
  'text-sm': '14px', // Body small, secondary
  'text-base': '16px', // Body text (default)
  'text-lg': '18px', // Emphasized text
  'text-xl': '20px', // Small headings
  'text-2xl': '24px', // Headings H4
  'text-3xl': '30px', // Headings H3
  'text-4xl': '36px', // Headings H2
  'text-5xl': '48px', // Headings H1
};

// Font Weights (CONSISTENT USAGE)
const fontWeights = {
  'font-normal': '400', // Body text
  'font-medium': '500', // Emphasized text
  'font-semibold': '600', // Subheadings
  'font-bold': '700', // Headings, strong emphasis
};
```

### Spacing System (8px GRID MANDATORY)

```typescript
// Base unit: 4px (0.25rem)
const spacing = {
  '0': '0px', // No spacing
  '1': '4px', // Micro spacing
  '2': '8px', // Small spacing
  '3': '12px', // Medium-small
  '4': '16px', // Medium spacing (base)
  '6': '24px', // Large spacing
  '8': '32px', // Extra large
  '12': '48px', // Section spacing
  '16': '64px', // Major sections
  '20': '80px', // Hero sections
};
```

## üö® CRITICAL STYLING RULES

### ‚ùå ABSOLUTE PROHIBITIONS

1. **NEVER** use inline styles (`style="..."`)
2. **NEVER** use CSS modules or styled-components
3. **NEVER** use custom CSS without design system approval
4. **NEVER** use hardcoded colors (use design tokens)
5. **NEVER** use arbitrary values without rem/px suffix
6. **NEVER** use deprecated Tailwind classes
7. **NEVER** mix CSS frameworks (only Tailwind CSS 4)
8. **NEVER** use `!important` declarations

### ‚úÖ MANDATORY REQUIREMENTS

1. **ALWAYS** use Tailwind CSS 4 utility classes
2. **ALWAYS** follow the 8px grid system
3. **ALWAYS** use design system color tokens
4. **ALWAYS** implement mobile-first responsive design
5. **ALWAYS** use the cn() utility for conditional classes
6. **ALWAYS** follow the established component variant patterns
7. **ALWAYS** implement proper focus and hover states
8. **ALWAYS** ensure accessibility contrast ratios

## üéØ TAILWIND CLASS ORGANIZATION (STRICT ORDER)

### The Sacred Class Order (NEVER DEVIATE)

```typescript
className={cn(
  // 1. LAYOUT (Position, Display, Grid/Flex)
  "relative flex items-center justify-between",

  // 2. BOX MODEL (Width, Height, Padding, Margin)
  "w-full h-auto px-4 py-2 mx-auto",

  // 3. SPACING & SIZING (Gap, Space)
  "gap-4 space-y-2",

  // 4. BORDERS & RADIUS (Border, Rounded)
  "border border-slate-200 rounded-md",

  // 5. BACKGROUND & SHADOWS (Background, Shadow)
  "bg-white shadow-sm",

  // 6. TYPOGRAPHY (Font, Text, Line-height)
  "text-sm font-medium text-slate-900 leading-tight",

  // 7. VISUAL EFFECTS (Opacity, Transform, Filter)
  "opacity-100 transition-all duration-200",

  // 8. INTERACTIVITY (Cursor, Select, Pointer-events)
  "cursor-pointer select-none",

  // 9. STATE MODIFIERS (Hover, Focus, Active, Disabled)
  "hover:bg-slate-100 focus:ring-2 focus:ring-slate-950",
  "disabled:opacity-50 disabled:cursor-not-allowed",

  // 10. RESPONSIVE MODIFIERS (sm:, md:, lg:, xl:)
  "sm:px-6 md:px-8 lg:text-base",

  // 11. DARK MODE (dark:)
  "dark:bg-slate-800 dark:text-slate-100",

  // 12. CUSTOM/OVERRIDE CLASSES (Last)
  className
)}
```

## üß© COMPONENT STYLING PATTERNS

### Button Variants (REFERENCE IMPLEMENTATION)

```typescript
const buttonVariants = cva(
  // Base classes (always applied)
  [
    'inline-flex items-center justify-center',
    'whitespace-nowrap rounded-md text-sm font-medium',
    'transition-colors duration-200',
    'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-950',
    'disabled:pointer-events-none disabled:opacity-50',
  ],
  {
    variants: {
      variant: {
        default: ['bg-slate-900 text-slate-50 shadow', 'hover:bg-slate-900/90'],
        destructive: ['bg-red-500 text-slate-50 shadow-sm', 'hover:bg-red-500/90'],
        outline: ['border border-slate-200 bg-white shadow-sm', 'hover:bg-slate-100 hover:text-slate-900'],
        secondary: ['bg-slate-100 text-slate-900 shadow-sm', 'hover:bg-slate-100/80'],
        ghost: ['hover:bg-slate-100 hover:text-slate-900'],
        link: ['text-slate-900 underline-offset-4', 'hover:underline'],
      },
      size: {
        default: 'h-9 px-4 py-2',
        sm: 'h-8 rounded-md px-3 text-xs',
        lg: 'h-10 rounded-md px-8',
        icon: 'h-9 w-9',
      },
    },
    defaultVariants: {
      variant: 'default',
      size: 'default',
    },
  }
);
```

### Card Component Pattern

```typescript
const cardVariants = cva(['rounded-xl border bg-white text-slate-950 shadow', 'transition-shadow duration-200'], {
  variants: {
    variant: {
      default: 'border-slate-200',
      elevated: 'border-slate-200 shadow-lg',
      interactive: ['border-slate-200 cursor-pointer', 'hover:shadow-lg hover:border-slate-300'],
    },
    padding: {
      none: 'p-0',
      sm: 'p-4',
      default: 'p-6',
      lg: 'p-8',
    },
  },
  defaultVariants: {
    variant: 'default',
    padding: 'default',
  },
});
```

## üì± RESPONSIVE DESIGN SYSTEM

### Breakpoint Strategy (MOBILE-FIRST MANDATORY)

```typescript
// Tailwind Breakpoints (NEVER CHANGE)
const breakpoints = {
  sm: '640px', // Small tablets, large phones
  md: '768px', // Tablets
  lg: '1024px', // Laptops
  xl: '1280px', // Desktops
  '2xl': '1536px', // Large desktops
};

// Responsive Patterns (FOLLOW EXACTLY)
// ‚úÖ Correct: Mobile-first approach
className = 'text-sm md:text-base lg:text-lg xl:text-xl';
className = 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3';
className = 'px-4 md:px-6 lg:px-8';

// ‚ùå Wrong: Desktop-first approach
className = 'xl:text-xl lg:text-lg md:text-base text-sm';
```

### Container System (CONSISTENT USAGE)

```typescript
// Container Classes (MANDATORY)
const containers = {
  // Full width container with max-width constraints
  container: 'container mx-auto px-4 sm:px-6 lg:px-8',

  // Content width containers
  narrow: 'max-w-2xl mx-auto px-4', // Blog posts, forms
  wide: 'max-w-6xl mx-auto px-4', // Dashboard, galleries
  full: 'max-w-full mx-auto px-4', // Full width sections
};
```

## üé® LAYOUT PATTERNS

### Grid System (CSS GRID PREFERRED)

```typescript
// Grid Layouts (MODERN APPROACH)
className = 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6';
className = 'grid grid-cols-[200px_1fr] gap-4'; // Sidebar layout
className = 'grid grid-cols-subgrid gap-4'; // Subgrid support

// Flexbox for Alignment (WHEN APPROPRIATE)
className = 'flex items-center justify-between';
className = 'flex flex-col md:flex-row gap-4';
```

### Navigation Patterns

```typescript
// Header Navigation
const headerClasses = cn('sticky top-0 z-50 w-full', 'border-b border-slate-200 bg-white/95 backdrop-blur-sm', 'supports-[backdrop-filter]:bg-white/60');

// Main Navigation
const navClasses = cn('hidden md:flex items-center space-x-6', 'text-sm font-medium text-slate-600', 'hover:text-slate-900 transition-colors');
```

## üîÑ ANIMATION & TRANSITIONS

### Micro-interactions (SUBTLE & PERFORMANT)

```typescript
// Transition Classes (STANDARD DURATIONS)
const transitions = {
  fast: 'transition-all duration-150 ease-out', // Hover effects
  normal: 'transition-all duration-200 ease-out', // Default
  slow: 'transition-all duration-300 ease-out', // Complex animations
};

// Transform Patterns
const transforms = {
  scale: 'hover:scale-105 active:scale-95',
  slide: 'transform translate-x-0 hover:translate-x-1',
  fade: 'opacity-0 animate-in fade-in duration-200',
};
```

### Loading States

```typescript
// Skeleton Loaders
const skeletonClasses = cn(
  'animate-pulse bg-slate-200 rounded',
  'before:absolute before:inset-0',
  'before:bg-gradient-to-r before:from-transparent',
  'before:via-white/60 before:to-transparent',
  'before:animate-shimmer'
);

// Spinner Components
const spinnerClasses = 'animate-spin h-4 w-4 text-slate-600';
```

## üåô DARK MODE STRATEGY

### CSS Variables Approach (FUTURE-READY)

```css
:root {
  --background: #ffffff;
  --foreground: #171717;
  --card: #ffffff;
  --card-foreground: #171717;
  --primary: #0f172a;
  --primary-foreground: #f8fafc;
}

[data-theme='dark'] {
  --background: #0a0a0a;
  --foreground: #ededed;
  --card: #171717;
  --card-foreground: #ededed;
  --primary: #f8fafc;
  --primary-foreground: #0f172a;
}
```

### Dark Mode Classes (PREPARATION)

```typescript
// Dark mode utilities (when implemented)
className={cn(
  "bg-white text-slate-900",
  "dark:bg-slate-900 dark:text-slate-100",
  "border-slate-200 dark:border-slate-800"
)}
```

## üö® ACCESSIBILITY STANDARDS

### Color Contrast (WCAG AA COMPLIANCE)

```typescript
// Text Contrast Ratios (MINIMUM REQUIREMENTS)
const textContrast = {
  normal: '4.5:1', // Regular text
  large: '3:1', // Large text (18px+ or 14px+ bold)
  interactive: '4.5:1', // Links, buttons
};

// Focus Indicators (ALWAYS VISIBLE)
const focusRing = 'focus-visible:ring-2 focus-visible:ring-slate-950 focus-visible:ring-offset-2';
```

### Interactive States (MANDATORY)

```typescript
// Button States (ALL REQUIRED)
const interactiveStates = cn(
  'transition-colors duration-200', // Smooth transitions
  'hover:bg-slate-100', // Hover feedback
  'active:bg-slate-200', // Press feedback
  'focus-visible:ring-2 focus-visible:ring-slate-950', // Focus ring
  'disabled:opacity-50 disabled:cursor-not-allowed' // Disabled state
);
```

## üìã TESTING REQUIREMENTS

### Visual Regression (MANDATORY CHECKS)

- All components must render consistently across breakpoints
- Color contrast must meet WCAG AA standards
- Interactive states must be clearly visible
- Loading states must be implemented for async operations
- Error states must be visually distinct and actionable

### Performance (OPTIMIZATION STANDARDS)

- Use `will-change` sparingly and remove after animations
- Prefer CSS transforms over layout-triggering properties
- Implement efficient re-renders with proper memoization
- Use `contain: layout style paint` for complex components

## üéØ COMPONENT-SPECIFIC PATTERNS

### Form Controls

```typescript
// Input Field Pattern
const inputClasses = cn(
  'flex h-9 w-full rounded-md border',
  'border-slate-200 bg-white px-3 py-1',
  'text-sm shadow-sm transition-colors',
  'file:border-0 file:bg-transparent file:text-sm file:font-medium',
  'placeholder:text-slate-500',
  'focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-slate-950',
  'disabled:cursor-not-allowed disabled:opacity-50'
);

// Error State
const errorClasses = 'border-red-500 focus-visible:ring-red-500';
```

### Content Layouts

```typescript
// Article/Blog Layout
const contentClasses = cn(
  'prose prose-slate max-w-none',
  'prose-headings:font-semibold prose-headings:text-slate-900',
  'prose-p:text-slate-700 prose-p:leading-relaxed',
  'prose-a:text-blue-600 prose-a:no-underline hover:prose-a:underline',
  'prose-code:bg-slate-100 prose-code:px-1 prose-code:rounded'
);
```

Remember: Consistent visual design creates trust and usability. Every pixel matters in the user experience. Follow these patterns religiously for a cohesive, professional application.
